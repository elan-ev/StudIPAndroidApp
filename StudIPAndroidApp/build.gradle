/*
 * Copyright (c) 2016 ELAN e.V.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the GNU Public License v3.0
 * which accompanies this distribution, and is available at
 * http://www.gnu.org/licenses/gpl.html
 */


import java.text.SimpleDateFormat

// Production-Release versioning
def versionMajor = 1  // max. 9
def versionMinor = 0  // max. 99
def versionPatch = 21 // max. 99

// Beta- and Alpha-Release versioning
def versionMajorBeta = 1 // max. 9
def versionMinorBeta = 1 // max. 99
def versionPatchBeta = 10 // max. 99

buildscript {

  repositories {
    maven { url 'https://maven.fabric.io/public' }
    jcenter()
  }
  dependencies {
    classpath 'io.fabric.tools:gradle:1.+'
//    classpath "com.fernandocejas.frodo:frodo-plugin:0.8.1"
  }

}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
//apply plugin: 'com.fernandocejas.frodo'

repositories {
  maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
  maven { url 'https://maven.fabric.io/public' }
  jcenter()
}

dependencies {
  // Crashlytics Kit
  compile('com.crashlytics.sdk.android:crashlytics:2.5.5@aar') {
    transitive = true
  }
  // Android Support Libs
  compile 'com.android.support:support-v4:23.2.0'
  compile 'com.android.support:appcompat-v7:23.2.0'
  compile 'com.android.support:recyclerview-v7:23.2.0'
  compile 'com.android.support:design:23.2.0'
  compile 'com.android.support:cardview-v7:23.2.0'
  compile 'com.android.support:support-annotations:23.2.0'

  // Square Libs
  compile 'com.squareup.okhttp3:okhttp:3.0.1'
  compile 'com.squareup.okhttp3:okhttp-urlconnection:3.0.1'
  compile 'com.squareup.okhttp3:logging-interceptor:3.0.1'
  compile 'com.squareup.retrofit2:retrofit:2.0.0-beta4'
  compile 'com.squareup.retrofit2:converter-jackson:2.0.0-beta4'
  compile 'com.squareup.retrofit2:adapter-rxjava:2.0.0-beta4'
  compile 'com.squareup.retrofit2:retrofit-mock:2.0.0-beta4'
  compile 'com.squareup.picasso:picasso:2.5.2'
  compile 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.0.1'

  // Jackson JSON Parsing
  compile 'com.fasterxml.jackson.core:jackson-databind:2.7.1-1'
  compile 'com.fasterxml.jackson.core:jackson-annotations:2.7.1'

  // SignPost OAuth
  compile 'oauth.signpost:oauth-signpost:1.2.1.2'
  compile('oauth.signpost:signpost-commonshttp4:1.2.1.2') {
    exclude module: 'commons-logging'
    exclude module: 'httpcore'
    exclude module: 'httpclient'
  }
  compile('oauth.signpost:signpost-core:1.2.1.2') {
    exclude module: 'commons-codec'
  }
  compile 'se.akerfeldt:okhttp-signpost:1.1.0'

  // RxJava
  compile 'io.reactivex:rxandroid:0.25.0'
  //TODO: Update to rxandroid version 1.1
  // * Need to use new rxlifecyle in ReactiveFragment class
//  compile 'io.reactivex:rxandroid:1.1.0'
//  compile 'io.reactivex:rxjava:1.1.0'
//  compile 'com.trello:rxlifecycle:0.4.0'

  // Other
  compile 'se.emilsjolander:stickylistheaders:2.7.0'
  compile 'com.google.guava:guava:18.0'
  compile 'com.mcxiaoke.volley:library:1.0.19'
  compile 'de.hdodenhof:circleimageview:2.0.0'
  compile 'net.zetetic:android-database-sqlcipher:3.3.1-2'
  compile 'com.github.alamkanak:android-week-view:1.2.6'
  compile 'com.jakewharton:butterknife:7.0.1'
  compile 'io.github.yavski:fab-speed-dial:1.0.1'

  // Test deps
  androidTestCompile 'junit:junit:4.12'
  androidTestCompile 'com.android.support:support-annotations:23.2.0'
  androidTestCompile 'com.android.support.test:runner:0.4.1'
  androidTestCompile 'com.android.support.test:rules:0.4.1'
  androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.1'){
    exclude module: 'guave'
  }
  androidTestCompile 'com.android.support.test.espresso:espresso-web:2.2.1'

  // Dependencies for local unit tests
  testCompile 'junit:junit:4.12'
  testCompile 'org.mockito:mockito-all:2.0.2-beta'
  testCompile 'com.google.truth:truth:0.27'
}

def buildTime() {
  def df = new SimpleDateFormat("yyyy-MM-dd HH:mm")
  df.setTimeZone(TimeZone.getTimeZone("CET"))
  return df.format(new Date())
}

def isTravis = "true".equals(System.getenv("TRAVIS"))
def preDexEnabled = "true".equals(System.getProperty("pre-dex", "true"))
android {
  useLibrary 'org.apache.http.legacy'

  dexOptions {
    // Skip pre-dexing when running on Travis CI or when disabled via -Dpre-dex=false.
    preDexLibraries = preDexEnabled && !isTravis
    javaMaxHeapSize "4g" //specify the heap size for the dex process
  }


  lintOptions {
    abortOnError false
  }

  compileSdkVersion 23
  buildToolsVersion '23.0.2'

  // Testing option
  // Always show the result of every unit test, even if it passes.
  testOptions.unitTests.all {
    testLogging {
      events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
    }
  }

  signingConfigs {
    release
  }

  //Read signing config from release.properties in root
  if (rootProject.file("release.properties").exists()) {
    def props = new Properties()
    props.load(new FileInputStream(rootProject.file("release.properties")))

    android.signingConfigs.release.storeFile rootProject.file(props.getProperty("keyStore"))
    android.signingConfigs.release.storePassword props.getProperty("keyStorePassword")
    android.signingConfigs.release.keyAlias props.getProperty("keyAlias")
    android.signingConfigs.release.keyPassword props.getProperty("keyAliasPassword")
  }

  defaultConfig {
    minSdkVersion 10
    targetSdkVersion 23

    versionCode versionMajor * 10000 + versionMinor * 100 + versionPatch
    versionName "${versionMajor}.${versionMinor}.${versionPatch}"
    buildConfigField "String", "BUILD_TIME", "\"${buildTime()}\""

    // Testing settings
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    testInstrumentationRunnerArguments disableAnalytics: 'true'

    // Enabling multidex support.
    multiDexEnabled true
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_7
    targetCompatibility JavaVersion.VERSION_1_7
  }

  productFlavors {
    beta {
      versionCode versionMajorBeta * 10000 + versionMinorBeta * 100 + versionPatchBeta
      versionName "${versionMajorBeta}.${versionMinorBeta}.${versionPatchBeta}-beta"
    }

    production {
      versionCode versionMajor * 10000 + versionMinor * 100 + versionPatch
      versionName "${versionMajor}.${versionMinor}.${versionPatch}"
    }
  }

  buildTypes {

    debug {
      buildConfigField "boolean", "USE_CRASHLYTICS", "false"

      // Database name configuration
      buildConfigField "String", "DATABASE", "\"studip_debug.db\""

      // SyncHelper threshold values
      buildConfigField "int", "COURSES_SYNC_THRESHOLD", "5000"; // 1h
      buildConfigField "int", "NEWS_SYNC_THRESHOLD", "5000"; // 1min
      buildConfigField "int", "CONTACTS_SYNC_THRESHOLD", "5000"; // 1min
      ext.enableCrashlytics = false
      versionNameSuffix '-DEBUG'
      debuggable = true
      testCoverageEnabled = true
    }

    release {
      buildConfigField "boolean", "USE_CRASHLYTICS", "true"

      // Database name configuration
      buildConfigField "String", "DATABASE", "\"studip_encrypted.db\""

      // SyncHelper threshold values
      buildConfigField "int", "COURSES_SYNC_THRESHOLD", "3600000"; // 1h
      buildConfigField "int", "NEWS_SYNC_THRESHOLD", "60000"; // 1min
      buildConfigField "int", "CONTACTS_SYNC_THRESHOLD", "60000"; // 1min

      ext.enableCrashlytics = true
      versionNameSuffix '-RELEASE'
      debuggable = false
      signingConfig signingConfigs.release
      minifyEnabled = true
      shrinkResources = true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
    }

    applicationVariants.all { variant ->
      variant.outputs.each { output ->
        def file = output.outputFile
        output.outputFile = new File(file.parent, file.name.replace(".apk",
            "-" + variant.productFlavors.versionCode + "-" + variant.name + ".apk"))
      }
    }

  }

  packagingOptions {
    exclude 'META-INF/DEPENDENCIES'
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/LICENSE.txt'
    exclude 'META-INF/NOTICE.txt'
    exclude 'META-INF/maven/com.google.guava/guava/pom.properties'
    exclude 'META-INF/maven/com.google.guava/guava/pom.xml'
  }

}
